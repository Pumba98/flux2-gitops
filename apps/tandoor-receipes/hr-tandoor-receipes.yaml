---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: tandoor-receipes
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  dependsOn:
    - name: ingress-nginx-external
      namespace: networking
    - name: longhorn
      namespace: longhorn-system
    - name: tandoor-receipes-postgresql
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 1.5.15
            env:
              SECRET_KEY: ${SECRET_TANDOOR_RECEIPES_DB_PASSWORD}
              TIMEZONE: Europe/Berlin
              DB_ENGINE: django.db.backends.postgresql
              POSTGRES_HOST: tandoor-receipes-postgresql
              POSTGRES_PORT: "5432"
              POSTGRES_DB: tandoor-receipes
              POSTGRES_USER: tandoor-receipes
              POSTGRES_PASSWORD: ${SECRET_TANDOOR_RECEIPES_DB_PASSWORD}
              # Serve mediafiles directly using gunicorn. Basically everyone recommends not doing this. Please use any of the examples
              # provided that include an additional nxginx container to handle media file serving.
              # If you know what you are doing turn this back on (1) to serve media files using djangos serve() method.
              # when unset: 1 (true) - this is temporary until an appropriate amount of time has passed for everyone to migrate
              GUNICORN_MEDIA: 1
              ENABLE_SIGNUP: 0
              ENABLE_METRICS: 1
              ENABLE_PDF_EXPORT: 1
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
    service:
      main:
        controller: main
        ports:
          http:
            port: 8080
    ingress:
      main:
        className: nginx-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "${SECRET_GATEWAY}"
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/auth-url: http://authelia.networking.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}
        hosts:
          - host: receipes.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: tandoor-receipes-tls
            hosts:
              - receipes.${SECRET_DOMAIN}
    persistence:
      static:
        existingClaim: tandoor-receipes-static
        globalMounts:
        - path: /opt/recipes/staticfiles
      media:
        existingClaim: tandoor-receipes-media
        globalMounts:
        - path: /opt/recipes/mediafiles
